name: Publishing a release

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process'
  JAVA_VERSION: 11
on:
  release:
    types: [published]
permissions:
  contents: read
jobs:
  publish:
    name: Publish
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      - name: Assemble APK
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: assembleDebug
      - name: Printing Signing Report
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: signingReport
      - name: Upload APK to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
      - name: Publish to GitHub packages repository
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: publishReleasePublicationToGitHubPackagesRepository
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          REPO_CREDENTIAL_USER: ${{ secrets.REPO_CREDENTIAL_USER }}
          REPO_CREDENTIAL_PASSWORD: ${{ secrets.REPO_CREDENTIAL_PASSWORD }}


  sync:
    name: Publish to public repo
    needs: [ publish ]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create deploy folder
        run: mkdir deploy
      - name: Copying the necessary files to the deploy folder
        run: |
          cp -R version.txt ./app ./gradle .gitignore LICENSE build.gradle gradle.properties gradlew gradlew.bat settings.gradle ./deploy
          mkdir -p ./deploy/.github/workflows && cp -R .github/workflows-public/. ./deploy/.github/workflows
      - name: Remove private library references
        run: sed -i "s/include ':mylibrary'//g" ./deploy/settings.gradle && sed -i "s/implementation project(':mylibrary')/implementation \"wayakdev.sample:sample-library:\$libVersion\"/g" ./deploy/app/build.gradle
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
      - name: Build sample code from the deploy folder
        run: cd ./deploy && ./gradlew build
        env:
          GITHUB_ACTOR: "mmachado53"
          GITHUB_TOKEN: ${{ secrets.REPO_CREDENTIAL_PASSWORD }}
      - name: Pushes to the public repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.REPO_CREDENTIAL_PASSWORD }}
        with:
          source-directory: 'deploy'
          destination-github-username: 'mmachado53'
          destination-repository-name: 'android-sample-lib-public'
          user-email: mmachado53@gmail.com
          target-branch: main
      - name: Create release in public repo
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          repo: "android-sample-lib-public"
          owner: "mmachado53"
          name: ${{ github.event.release.name }}
          body: ${{ github.event.release.body }}
          token: ${{ secrets.REPO_CREDENTIAL_PASSWORD }}